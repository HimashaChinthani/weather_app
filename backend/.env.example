# Copy to .env and fill values for local development
# OpenWeather API key (optional). If empty, backend will return mock data from cities.json
OPENWEATHER_API_KEY=68fc43911e9eebcf4c3b4213

# Auth0 settings (optional). If set, backend will validate JWTs via Auth0.
AUTH0_DOMAIN=dev-imj2leenvp3wltkk.us.auth0.com
AUTH0_AUDIENCE=https://fidenz-weather-api


# Development auth bypass: when true, backend will accept a mock token 'dev-token' or skip auth.
# Set to true only for isolated local development. Keep false for submission/production.
DEV_AUTH_BYPASS=false

# Port the backend listens on (default 4000)
PORT=4000

# NOTE: Do NOT commit real secrets to version control. Copy this file to `backend/.env` and fill values.
# Example contents for backend/.env:
# OPENWEATHER_API_KEY=your_openweather_key_here
# AUTH0_DOMAIN=your-tenant.auth0.com
# AUTH0_AUDIENCE=your-api-identifier

# Quick instructions to complete Part 2 (Auth0) and create the test user
# 1) In Auth0 dashboard create an API and note its Identifier -> set AUTH0_AUDIENCE to that value.
# 2) Create a Single Page Application in Auth0 and set Allowed Callback/Logout URLs and Web Origins to http://localhost:5173
# 3) In the Database Connection settings, disable public signups so only pre-registered users can log in.
# 4) Create the test user with the following credentials in Auth0 Users (User Management → Users → Create User):
#    Email: careers@fidenz.com
#    Password: Pass#fidenz
#    (Optional) Set Email Verified = ON for easier testing.
# 5) To enable MFA: Security → Multifactor Auth in the Auth0 dashboard (configure email or other factor).

